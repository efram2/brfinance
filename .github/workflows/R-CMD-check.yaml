name: R-CMD-check

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

jobs:
  R-CMD-check:
    runs-on: ubuntu-latest

    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      R_KEEP_PKG_SOURCE: yes

    steps:
      # 1 Clona o repositório
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2 Instala o R
      - name: Set up R
        uses: r-lib/actions/setup-r@v2
        with:
          use-public-rspm: true  # repositório de pacotes rápido e estável

      # 3 Instala o Pandoc (necessário pras vinhetas)
      - name: Set up Pandoc
        uses: r-lib/actions/setup-pandoc@v2

      # 4 Cache de pacotes R (acelera builds futuras)
      - name: Cache R packages
        uses: actions/cache@v4
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-r-${{ hashFiles('**/DESCRIPTION') }}
          restore-keys: ${{ runner.os }}-r-

      # 5 Instala dependências de sistema (pro curl, xml2, etc.)
      - name: Install system dependencies
        run: |
          sudo apt-get update -y
          sudo apt-get install -y libcurl4-openssl-dev libssl-dev libxml2-dev

      # 6 Instala dependências do R (incluindo rcmdcheck)
      - name: Install R dependencies
        run: |
          R -e 'install.packages(c("remotes", "rcmdcheck"))'
          R -e 'remotes::install_deps(dependencies = TRUE)'

      # 7 Rodar o check completo do pacote
      - name: Run R CMD check
        run: |
          R -e 'rcmdcheck::rcmdcheck(args = c("--no-manual"), error_on = "warning")'

      # 8 Salva artefatos de log do check (útil se der erro)
      - name: Upload check results
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: R-CMD-check-results
          path: check
